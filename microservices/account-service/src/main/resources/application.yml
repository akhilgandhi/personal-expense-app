server:
  port: 8082
  error:
    include-message: always

spring:
  data:
    mongodb:
      host: localhost
      port: 27017
      database: account-db
  cloud:
    function:
      definition: messageProcessor
    stream:
      defaultBinder: rabbit
      default.contentType: application/json
      bindings:
        messageProcessor-in-0:
          destination: accounts
          group: accountsGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
      rabbit:
        bindings:
          messageProcessor-in-0:
            consumer:
              autoBindDlq: true
              republishToDlq: true
      kafka:
        binder:
          brokers: 127.0.0.1
          defaultBrokerPort: 9092
        bindings:
          messageProcessor-in-0:
            consumer:
              enableDlq: true
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

logging:
  level:
    root: INFO
    com.akhil.microservices: DEBUG
    org:
      springframework:
        data:
          mongodb:
            core:
              ReactiveMongoTemplate: DEBUG

management:
  endpoint:
    health:
      show-details: "ALWAYS"
  endpoints:
    web:
      exposure:
        include: "*"
---
server:
  port: 8080

spring:
  config:
    activate:
      on-profile: docker
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka
  data:
    mongodb:
      host: mongodb
  rabbitmq:
    host: rabbitmq
---
spring:
  config:
    activate:
      on-profile: streaming_partitioned
  cloud:
    stream:
      bindings:
        messageProcessor-in-0:
          consumer:
            partitioned: true
            instanceCount: 2
---
spring:
  config:
    activate:
      on-profile: streaming_instance_0
  cloud:
    stream:
      bindings:
        messageProcessor-in-0:
          consumer:
            instanceIndex: 0
---
spring:
  config:
    activate:
      on-profile: streaming_instance_1
  cloud:
    stream:
      bindings:
        messageProcessor-in-0:
          consumer:
            instanceIndex: 1
---
spring:
  config:
    activate:
      on-profile: kafka
  cloud:
    stream:
      defaultBinder: kafka
      kafka:
        binder:
          replication-factor: 1
  kafka:
    bootstrap-servers: kafka:9092
